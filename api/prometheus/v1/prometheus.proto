syntax = "proto3";

package prometheus.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/tkeel-io/tkeel-monitor/api/prometheus/v1;v1";
option java_multiple_files = true;
option java_package = "dev.tkeel.hello.api.prometheus.v1";
option java_outer_classname = "OpenapiProtoV1";

// The greeting service definition.
service Prometheus {
  // Sends query.
  rpc Query(QueryRequest) returns (QueryResponse) {
    option (google.api.http) = {
      get : "/prometheus/query"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "prometheus 单个指标查询(query==原始 PromQl)"
      operation_id : "Query"
      tags : "Prometheus"
      responses : {
        key : "200"
        value : {description : "OK"}
      }
    };
  };
  // Sends query.
  rpc BatchQuery(BatchQueryRequest) returns (BatchQueryResponse) {
    option (google.api.http) = {
      get : "/prometheus/batch_query"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "prometheus 多个指标查询(query==原始 PromQl)"
      operation_id : "BatchQuery"
      tags : "Prometheus"
      responses : {
        key : "200"
        value : {description : "OK"}
      }
    };
  };
  // Sends query.
  rpc TKMeter(TKMeterRequest) returns (QueryResponse) {
    option (google.api.http) = {
      get : "/prometheus/tkmeter"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "prometheus 单个指标查询(query==tkeel自定义指标)"
      operation_id : "TKMeter"
      tags : "Prometheus"
      responses : {
        key : "200"
        value : {description : "OK"}
      }
    };
  };
  // Sends query.
  rpc BatchTKMeter(TKMeterBatchRequest) returns (BatchQueryResponse) {
    option (google.api.http) = {
      get : "/prometheus/batch_tkmeter"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "prometheus 多个指标查询(query==tkeel自定义指标)"
      operation_id : "TKMeterBatch"
      tags : "Prometheus"
      responses : {
        key : "200"
        value : {description : "OK"}
      }
    };
  };

}

// The request message containing the user's name.
message QueryRequest {
  string query = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "查询语句"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  int64 st = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "起始时间戳"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  int64 et = 3 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "截止时间戳"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  string step = 4 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "步长(单位 ms/s/h 等)"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  string tenant_id = 5 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "租户ID"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
}

// The response message containing the greetings
message QueryResponse {
  MetricsData result = 1
  [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "指标数据"
  } ];
}

// The request message containing the user's name.
message BatchQueryRequest {
  string query = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "查询语句，多个查询语句用 | 隔开"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  int64 st = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "起始时间戳"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  int64 et = 3 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "结束时间戳"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  string step = 4 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "步长"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  string tenant_id = 5 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "租户ID"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
}

// The response message containing the greetings
message BatchQueryResponse {
  repeated MetricsData results = 1
  [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "指标数据"
  } ];
}


message TKMeterRequest{
  string meter = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "自定义指标名字"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  int64 st = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "起始时间戳"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  int64 et = 3 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "结束时间戳"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  string step = 4 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "步长"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  string tenant_id = 5 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "租户ID"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
}

// The request message containing the user's name.
message TKMeterBatchRequest {
  string meters = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "自定义指标，多个用 | 隔开"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  int64 st = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "起始时间戳"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  int64 et = 3 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "结束时间戳"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  string step = 4 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "步长"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  string tenant_id = 5 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "租户ID"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
}
message MetricsData {
  string result_type =1 ;
  string query =2 ;
  repeated MetricValue result =3;
}

message MetricValue {
  map<string,string> metric =1;
  Point value =2;
  repeated Point values = 3;
}

message Point {
   double timestamp =1 ;
   double value =2;
}