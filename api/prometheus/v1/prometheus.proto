syntax = "proto3";

package prometheus.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/tkeel-io/tkeel-monitor/api/prometheus/v1;v1";
option java_multiple_files = true;
option java_package = "dev.tkeel.hello.api.prometheus.v1";
option java_outer_classname = "OpenapiProtoV1";

// The greeting service definition.
service Prometheus {
  // Sends query.
  rpc Query(QueryRequest) returns (QueryResponse) {
    option (google.api.http) = {
      get : "/prometheus"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "query promehteus"
      operation_id : "Query"
      tags : "Prometheus"
      responses : {
        key : "200"
        value : {description : "OK"}
      }
    };
  };

//  rpc RulesCreate(RulesCreateRequest) returns (RulesCreateResponse) {
//    option (google.api.http) = {
//      post : "/prometheus/rules"
//    };
//    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
//      summary : "create prometheus rules"
//      operation_id : "RulesCreate"
//      tags : "Prometheus"
//      responses : {
//        key : "200"
//        value : {description : "OK"}
//      }
//    };
//  };
//
//  rpc RulesGet(RulesCreateRequest) returns (RulesCreateResponse) {
//    option (google.api.http) = {
//      get : "/prometheus/rules"
//    };
//    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
//      summary : "get prometheus rules"
//      operation_id : "RulesGet"
//      tags : "Prometheus"
//      responses : {
//        key : "200"
//        value : {description : "OK"}
//      }
//    };
//  }
//
//  rpc RulesPatch(RulesCreateRequest) returns (RulesCreateResponse) {
//    option (google.api.http) = {
//      patch : "/prometheus/rules"
//    };
//    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
//      summary : "get prometheus rules"
//      operation_id : "RulesPatch"
//      tags : "Prometheus"
//      responses : {
//        key : "200"
//        value : {description : "OK"}
//      }
//    };
//  }
//
//  rpc RulesUpdate(RulesCreateRequest) returns (RulesCreateResponse) {
//    option (google.api.http) = {
//      put : "/prometheus/rules"
//    };
//    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
//      summary : "get prometheus rules"
//      operation_id : "RulesUpdate"
//      tags : "Prometheus"
//      responses : {
//        key : "200"
//        value : {description : "OK"}
//      }
//    };
//  }
//
//  rpc RulesDelete(RulesCreateRequest) returns (RulesCreateResponse) {
//    option (google.api.http) = {
//      delete : "/prometheus/rules"
//    };
//    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
//      summary : "get prometheus rules"
//      operation_id : "RulesDelete"
//      tags : "Prometheus"
//      responses : {
//        key : "200"
//        value : {description : "OK"}
//      }
//    };
//  }
//
//
//  rpc AlertManagerCreate(RulesCreateRequest) returns (RulesCreateResponse) {
//    option (google.api.http) = {
//      post : "/prometheus/alertmanagers"
//    };
//    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
//      summary : "create prometheus alertmanagers"
//      operation_id : "AlertManagerCreate"
//      tags : "Prometheus"
//      responses : {
//        key : "200"
//        value : {description : "OK"}
//      }
//    };
//  }
//  rpc AlertManagerGet(RulesCreateRequest) returns (RulesCreateResponse) {
//    option (google.api.http) = {
//      post : "/prometheus/alertmanagers"
//    };
//    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
//      summary : "get prometheus alertmanagers"
//      operation_id : "AlertManagerGet"
//      tags : "Prometheus"
//      responses : {
//        key : "200"
//        value : {description : "OK"}
//      }
//    };
//  }

}

// The request message containing the user's name.
message QueryRequest {
  string query = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "query filed"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  int64 st = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "start_time"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  int64 et = 3 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "end_time"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  string step = 4 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "time step"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
}

// The response message containing the greetings
message QueryResponse {
  MetricsData result = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "Hello Response"
      } ];
}


message MetricsData {
  string result_type =1 ;
  repeated MetricValue result =2;
}

message MetricValue {
  map<string,string> metric =1;
  Point value =2;
  repeated Point values = 3;
}

message Point {
   double timestamp =1 ;
   double value =2;
}