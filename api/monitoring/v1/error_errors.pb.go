// Code generated by protoc-gen-go-errors. DO NOT EDIT.

package v1

import (
	errors "github.com/tkeel-io/kit/errors"
	codes "google.golang.org/grpc/codes"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the ego package it is being compiled against.
const _ = errors.SupportPackageIsVersion1

var monitoringErrUnknown *errors.TError
var monitoringErrNotFound *errors.TError
var monitoringErrInvalidArgument *errors.TError
var monitoringErrInternal *errors.TError
var monitoringErrKsMarshal *errors.TError
var monitoringErrKsInvoke *errors.TError

func init() {
	monitoringErrUnknown = errors.New(int(codes.Unknown), "monitoring.v1.MONITORING_ERR_UNKNOWN", Error_MONITORING_ERR_UNKNOWN.String())
	errors.Register(monitoringErrUnknown)
	monitoringErrNotFound = errors.New(int(codes.NotFound), "monitoring.v1.MONITORING_ERR_NOT_FOUND", Error_MONITORING_ERR_NOT_FOUND.String())
	errors.Register(monitoringErrNotFound)
	monitoringErrInvalidArgument = errors.New(int(codes.InvalidArgument), "monitoring.v1.MONITORING_ERR_INVALID_ARGUMENT", Error_MONITORING_ERR_INVALID_ARGUMENT.String())
	errors.Register(monitoringErrInvalidArgument)
	monitoringErrInternal = errors.New(int(codes.Internal), "monitoring.v1.MONITORING_ERR_INTERNAL", Error_MONITORING_ERR_INTERNAL.String())
	errors.Register(monitoringErrInternal)
	monitoringErrKsMarshal = errors.New(int(codes.Internal), "monitoring.v1.MONITORING_ERR_KS_MARSHAL", Error_MONITORING_ERR_KS_MARSHAL.String())
	errors.Register(monitoringErrKsMarshal)
	monitoringErrKsInvoke = errors.New(int(codes.Internal), "monitoring.v1.MONITORING_ERR_KS_INVOKE", Error_MONITORING_ERR_KS_INVOKE.String())
	errors.Register(monitoringErrKsInvoke)
}

func MonitoringErrUnknown() errors.Error {
	return monitoringErrUnknown
}

func MonitoringErrNotFound() errors.Error {
	return monitoringErrNotFound
}

func MonitoringErrInvalidArgument() errors.Error {
	return monitoringErrInvalidArgument
}

func MonitoringErrInternal() errors.Error {
	return monitoringErrInternal
}

func MonitoringErrKsMarshal() errors.Error {
	return monitoringErrKsMarshal
}

func MonitoringErrKsInvoke() errors.Error {
	return monitoringErrKsInvoke
}
